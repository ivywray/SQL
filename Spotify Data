# Here I have downloaded Spotify data from Kaggle and then created a table to insert the Spotify data into.
# Next I analyzed the data using SQL.

#Creating the table: 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name VARCHAR NOT NULL,
track_name VARCHAR NOT NULL,
track_id VARCHAR NOT NULL,
popularity INTEGER NOT NULL,
danceability DECIMAL(4,3) NOT NULL,
energy DECIMAL(4,3) NOT NULL,
key INTEGER NOT NULL,
loudness DECIMAL(5,3) NOT NULL,
mode INTEGER NOT NULL,
speechiness DECIMAL(5,4) NOT NULL,
acousticness DECIMAL(6,5) NOT NULL,
instrumentalness TEXT NOT NULL,
liveness DECIMAL(5,4) NOT NULL,
valence DECIMAL(4,3) NOT NULL,
tempo DECIMAL(6,3) NOT NULL,
duration_ms INTEGER NOT NULL,
time_signature INTEGER NOT NULL 
)

# I inserted the Spotify Data .csv into the table.

# I discovered what the 5 least dancable songs are by danceability.
SELECT artist_name, track_name, danceability
FROM BIT_DB.Spotifydata
ORDER BY danceability ASC
LIMIT 5;

# Next I found the average liveness, acousticness, and tempo of each artist and track.
SELECT artist_name, track_name,
avg(liveness),
avg(acousticness),
avg(tempo)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

# Then I determined which songs are by Doja Cat, Ariana Grande, or Olivia Rodrigo with a tempo of 100 or greater. 
SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
WHERE tempo >= 100 AND artist_name IN ("Doja Cat","Ariana Grande","Olivia Rodrigo")
ORDER BY artist_name; 
